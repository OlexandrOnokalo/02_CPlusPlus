1. Які принципи ООП ви знаєте? Де вони проявляються?	
2. Що таке інкапсуляція? Чому важливо її дотримуватися та як зробити?
3. Що таке наслідування? Які його завдання?
4. Що таке поліморфізм?
5. В чому особливість static метода або поля в класі?
6. В чому різниця між структурою та класом?
7. Що таке const метод?
8. Що таке this і яка в нього особливість в const методах?
9. В якому типу метода ми не маємо доступу до вказівника this?
10. Яким чином можна перевантажити постфіксну та префіксну форму інкремента?
11. Як визначається блок catch, який повинен спрацювати при генерації exception?
12. Яким чином можна обробити будь-яким тип виключення?
13. Яка відмінність в роботі оператора throw та return?
14. В чому різниця між ініціалізацією та присвоєнням?
15. Яким чином можна ініціалізувати параметри класа через конструткор?
16. Що таке l-value та r-value? В чому різниця?
17. В чому різниця між конструктором копіювання та переміщення? Коли вони необхідні?
18. Що таке explicit?
19. Що означають ключові слова delete та default для опису методів класа?
20. В чому особливість дружніх функцій? Під яким специфікатором доступу їх потрібно описувати?
21. В чому різниця між агрегацією та композицією? Як їх можна реалізувати?
22. Яким чином можна отримати явний доступ до елементів глобальної області видимості?
23. Які класи для перетворення типів є в C++? Яка задача кожного з них?
24. Для чого буває потрібно перевантажувати оператор за допомогою функції?
25. Чи можемо ми отримати доступ до вкладеного класу зовні?
Наслідування та поліморфізм
26. Які види наслідування ви знаєте?
27. Які проблеми можуть виникнути при використанні множинного наслідування?
28. Що таке абстрактний клас?
29. Для означають специфікатори override та final?
30.  В чому особливість віртуальних функцій?
31. Що таке число віртуальна функція? Коли її доцільно використовувати?
32. Що таке перевизначення функції? Що для цього потрібно?
33. В якому порядку викликаються конструктори та деструткори при створенні класа, який успадкував інші класи?
34. Які специфікатори наслідування ви знаєте? В чому різниця між ними?
35. В чому особливість віртуального деструктора? Для чого він потрібний?
36. В чому особливість віртуального конструктора?
Динамічні структури даних
37. Яки види розумних вказівників ви знаєте? В чому відмінність? Для чого потрібно використувувати?
38. В чому різниця між масивом та списком? На що потрібно орієнтуватися при виборі?
39. Що таке дерево сортування? Для чого можна використовувати?
40. В чому різниця між map та multimap?
41. Якою властивістю повинен володіти об'єкт, щоб його можна було додати в асоціативні контейнери в якості ключа?
42. Які види черг ви знаєте? В чому відмінність?
43. Що означає характеристика size та capacity в контейнерах?
44. Яка структура контейнера vector?
45. Що таке функтор та де він може бути використаний?
46. Що таке ітератор? Які види ітераторів існують? В чому їх відмінність?
47. Яка відмінність між лямбда-функцією та простою функцією?

